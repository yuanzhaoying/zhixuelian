'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

var _path = require('path');

var _protobufjs = require('protobufjs');

var _protobufjs2 = _interopRequireDefault(_protobufjs);

var _crc = require('crc');

var _crc2 = _interopRequireDefault(_crc);

var _lodash = require('lodash');

var builder = _protobufjs2['default'].loadProtoFile((0, _path.join)(__dirname, '../proto/Packet.proto'));
var ProtoPacket = builder.build('Packet');

function calcCrc32(data) {
  return (0, _lodash.padLeft)(_crc2['default'].crc32(data.toBuffer()).toString('16'), 8, '0');
}

var Types = (0, _lodash.invert)(ProtoPacket.Type);

var Packet = (function () {
  function Packet(data) {
    _classCallCheck(this, Packet);

    this._p = new ProtoPacket();
    if (data) {
      this.setData(Buffer.isBuffer(data) ? data : new Buffer(data));
    }
    this._p.setStream(new Buffer([0]));
    this.error = null;
  }

  _createClass(Packet, [{
    key: 'setRaw',
    value: function setRaw() {
      this._p.setProtocol(ProtoPacket.Protocol.RAW);
    }
  }, {
    key: 'setEncrypted',
    value: function setEncrypted() {
      this._p.setProtocol(ProtoPacket.Protocol.ENCRYPTED);
    }
  }, {
    key: 'setStream',
    value: function setStream(s) {
      this._p.setStream(s);
    }
  }, {
    key: 'setSequence',
    value: function setSequence(s) {
      this._p.setSequence(s);
    }
  }, {
    key: 'setData',
    value: function setData(d) {
      this._p.setData(d);
    }
  }, {
    key: 'setAuthtag',
    value: function setAuthtag(t) {
      this._p.setAuthtag(t);
    }
  }, {
    key: 'setIv',
    value: function setIv(i) {
      this._p.setIv(i);
    }
  }, {
    key: 'load',
    value: function load(data) {
      var pp = ProtoPacket.decode(data);
      if (pp.crc && pp.data && pp.crc.toString('hex') !== calcCrc32(pp.data)) {
        this.error = new Error('invalid crc');
      }
      this._p = pp;
    }
  }, {
    key: 'pack',
    value: function pack() {
      if (this._p.data) {
        this._p.setCrc(new Buffer(calcCrc32(this._p.data), 'hex'));
      }
      return this._p;
    }
  }, {
    key: 'getRawPkt',
    value: function getRawPkt() {
      return this._p;
    }
  }, {
    key: 'getProtocol',
    value: function getProtocol() {
      return this._p.protocol;
    }
  }, {
    key: 'getType',
    value: function getType() {
      return this._p.type;
    }
  }, {
    key: 'getTypeString',
    value: function getTypeString() {
      return Types[this._p.type];
    }
  }, {
    key: 'getStream',
    value: function getStream() {
      return this._p.stream.toBuffer();
    }
  }, {
    key: 'getStreamString',
    value: function getStreamString() {
      return this._p.stream.toString('hex');
    }
  }, {
    key: 'getAuthentication',
    value: function getAuthentication() {
      return this._p.authentication;
    }
  }, {
    key: 'getSequence',
    value: function getSequence() {
      return this._p.sequence.toNumber();
    }
  }, {
    key: 'getData',
    value: function getData() {
      return this._p.data && this._p.data.toBuffer();
    }
  }, {
    key: 'getAuthtag',
    value: function getAuthtag() {
      return this._p.authtag && this._p.authtag.toBuffer();
    }
  }, {
    key: 'getIv',
    value: function getIv() {
      return this._p.iv && this._p.iv.toBuffer();
    }
  }, {
    key: 'toBuffer',
    value: function toBuffer() {
      return this.pack().toBuffer();
    }
  }], [{
    key: 'createFromBuffer',
    value: function createFromBuffer(data) {
      var pkt = new Packet();
      pkt.load(data);
      return pkt;
    }
  }, {
    key: 'createAuthentication',
    value: function createAuthentication(data, curve, cipher) {
      var pkt = new Packet(data);
      var authentication = new ProtoPacket.Authentication(curve, cipher);
      pkt._p.setType(ProtoPacket.Type.AUTHENTICATION);
      pkt._p.setAuthentication(authentication);
      return pkt;
    }
  }, {
    key: 'creatSynchronization',
    value: function creatSynchronization() {
      var pkt = new Packet();
      pkt._p.setType(ProtoPacket.Type.SYNCHRONIZATION);
      return pkt;
    }
  }, {
    key: 'createData',
    value: function createData(seq, data) {
      var pkt = new Packet(data);
      pkt._p.setType(ProtoPacket.Type.DATA);
      pkt.setSequence(seq);
      return pkt;
    }
  }, {
    key: 'createAcknowledgment',
    value: function createAcknowledgment(seq) {
      var pkt = new Packet();
      pkt._p.setType(ProtoPacket.Type.ACKNOWLEDGMENT);
      pkt.setSequence(seq);
      return pkt;
    }
  }, {
    key: 'createFinalize',
    value: function createFinalize() {
      var pkt = new Packet();
      pkt._p.setType(ProtoPacket.Type.FINALIZE);
      return pkt;
    }
  }]);

  return Packet;
})();

exports['default'] = Packet;
module.exports = exports['default'];